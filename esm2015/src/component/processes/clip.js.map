{"version":3,"file":"clip.js","sourceRoot":"","sources":["../../../package/src/component/processes/clip.ts"],"names":[],"mappings":"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","sourcesContent":["import { Scroller } from '../scroller';\r\nimport { Direction, Process, ProcessStatus } from '../interfaces/index';\r\n\r\nexport default class Clip {\r\n\r\n  static run(scroller: Scroller) {\r\n    Clip.prepareClip(scroller);\r\n\r\n    if (scroller.state.clip) {\r\n      Clip.doClip(scroller);\r\n    }\r\n\r\n    scroller.callWorkflow({\r\n      process: Process.clip,\r\n      status: ProcessStatus.next\r\n    });\r\n  }\r\n\r\n  static prepareClip(scroller: Scroller) {\r\n    const { buffer, state, state: { fetch, fetch: { direction } } } = scroller;\r\n    if (!buffer.size) {\r\n      return;\r\n    }\r\n    if (state.isInitialWorkflowCycle && !state.scrollState.scroll) {\r\n      scroller.logger.log(`skipping clip [initial cycle, no scroll]`);\r\n      return;\r\n    }\r\n    const firstIndex = <number>fetch.firstIndexBuffer;\r\n    const lastIndex = <number>fetch.lastIndexBuffer;\r\n    scroller.logger.log(() =>\r\n      `looking for ${direction ? 'anti-' + direction + ' ' : ''}items ` +\r\n      `that are out of [${firstIndex}..${lastIndex}] range`);\r\n    if (!direction || direction === Direction.forward) {\r\n      if (firstIndex - 1 >= buffer.absMinIndex) {\r\n        Clip.prepareClipByDirection(scroller, Direction.forward, firstIndex);\r\n      }\r\n    }\r\n    if (!direction || direction === Direction.backward) {\r\n      if (lastIndex + 1 <= buffer.absMaxIndex) {\r\n        Clip.prepareClipByDirection(scroller, Direction.backward, lastIndex);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  static prepareClipByDirection(scroller: Scroller, direction: Direction, edgeIndex: number) {\r\n    const forward = direction === Direction.forward;\r\n    scroller.buffer.items.forEach(item => {\r\n      if (\r\n        (forward && item.$index < edgeIndex) ||\r\n        (!forward && item.$index > edgeIndex)\r\n      ) {\r\n        item.toRemove = true;\r\n        item.removeDirection = direction;\r\n        scroller.state.clip = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  static doClip(scroller: Scroller) {\r\n    const { buffer, viewport: { paddings }, logger } = scroller;\r\n    const clipped: Array<number> = [];\r\n    const size = { backward: 0, forward: 0 };\r\n    scroller.state.clipCall++;\r\n    logger.stat(`before clip (${scroller.state.clipCall})`);\r\n    buffer.items = buffer.items.filter(item => {\r\n      if (item.toRemove) {\r\n        size[item.removeDirection] += item.size;\r\n        item.hide();\r\n        clipped.push(item.$index);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    if (size.backward) {\r\n      paddings.forward.size += size.backward;\r\n    }\r\n    if (size.forward) {\r\n      paddings.backward.size += size.forward;\r\n    }\r\n    logger.log(() => [\r\n      `clipped ${clipped.length} items` +\r\n      (size.backward ? `, +${size.backward} fwd px,` : '') +\r\n      (size.forward ? `, +${size.forward} bwd px,` : ''),\r\n      `range: [${clipped[0]}..${clipped[clipped.length - 1]}]`\r\n    ]);\r\n    logger.stat('after clip');\r\n  }\r\n\r\n}\r\n"]}