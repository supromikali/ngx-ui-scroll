{"version":3,"file":"reload.js","sourceRoot":"","sources":["../../../package/src/component/processes/reload.ts"],"names":[],"mappings":";;;;AACA,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAE7D,MAAM,CAAC,OAAO,OAAO,MAAM;;;;;;IAEzB,MAAM,CAAC,GAAG,CAAC,QAAkB,EAAE,WAAgB;;cACvC,cAAc,GAAG,QAAQ,CAAC,QAAQ,CAAC,cAAc;QACvD,QAAQ,CAAC,KAAK,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QACjD,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACvD,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACxC,QAAQ,CAAC,2BAA2B,EAAE,CAAC;QACvC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;QAC7B,+CAA+C;QAC/C,QAAQ,CAAC,YAAY,CAAC;YACpB,OAAO,EAAE,OAAO,CAAC,MAAM;YACvB,MAAM,EAAE,aAAa,CAAC,IAAI;SAC3B,CAAC,CAAC;IACL,CAAC;CAEF","sourcesContent":["import { Scroller } from '../scroller';\nimport { Process, ProcessStatus } from '../interfaces/index';\n\nexport default class Reload {\n\n  static run(scroller: Scroller, reloadIndex: any) {\n    const scrollPosition = scroller.viewport.scrollPosition;\n    scroller.state.setCurrentStartIndex(reloadIndex);\n    scroller.buffer.reset(true, scroller.state.startIndex);\n    scroller.viewport.reset(scrollPosition);\n    scroller.purgeInnerLoopSubscriptions();\n    scroller.purgeScrollTimers();\n    // todo: do we need to have Process.end before?\n    scroller.callWorkflow({\n      process: Process.reload,\n      status: ProcessStatus.next\n    });\n  }\n\n}\n"]}