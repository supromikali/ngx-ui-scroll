{"version":3,"file":"domRoutines.js","sourceRoot":"","sources":["../../../package/src/component/classes/domRoutines.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AAGpD,MAAM,OAAO,QAAQ;;;;IAInB,YAAY,QAAkB;QAC5B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;IACxC,CAAC;;;;;IAED,iBAAiB,CAAC,OAAoB;QACpC,OAAO,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAC/D,CAAC;;;;;;IAED,iBAAiB,CAAC,OAAoB,EAAE,KAAa;QACnD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;IAChE,CAAC;;;;;IAED,SAAS,CAAC,OAAoB;QAC5B,IAAI,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;YAC5C,OAAO,GAAG,mBAAa,OAAO,CAAC,aAAa,EAAA,CAAC;YAC7C,OAAO,mBAAY;gBACjB,QAAQ,EAAE,OAAO,CAAC,YAAY;gBAC9B,OAAO,EAAE,OAAO,CAAC,WAAW;gBAC5B,KAAK,EAAE,OAAO,CAAC,SAAS;gBACxB,QAAQ,EAAE,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY;gBAClD,MAAM,EAAE,OAAO,CAAC,UAAU;gBAC1B,OAAO,EAAE,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW;aAClD,EAAA,CAAC;SACH;QACD,OAAO,OAAO,CAAC,qBAAqB,EAAE,CAAC;IACzC,CAAC;;;;;IAED,OAAO,CAAC,OAAoB;QAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACvE,CAAC;;;;;IAED,YAAY,CAAC,OAAoB;;cACzB,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;QAChE,OAAO,QAAQ,CAAC,mBAAQ,IAAI,EAAA,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;;;;;;IAED,YAAY,CAAC,OAAoB,EAAE,KAAa;QAC9C,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC;IACrE,CAAC;;;;;;;IAED,WAAW,CAAC,MAAkB,EAAE,SAAoB,EAAE,QAAkB;;cAChE,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ;QAClE,OAAO,MAAM,CAAC,SAAS,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACrH,CAAC;;;;;;;IAED,OAAO,CAAC,OAAoB,EAAE,SAAoB,EAAE,QAAkB;;cAC9D,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtC,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;;;;;;;;IAED,QAAQ,CAAC,OAAoB,EAAE,SAAoB,EAAE,eAA4B,EAAE,QAAiB;QAClG,kBAAkB;QAClB,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1E,CAAC,SAAS,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrG,CAAC;;;;;IAED,WAAW,CAAC,OAAoB;QAC9B,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACjC,CAAC;;;;;IAED,SAAS,CAAC,OAAoB;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;IAClE,CAAC;CAEF;;;IAlEC,8BAA6B","sourcesContent":["import { Direction } from '../interfaces/direction';\nimport { Settings } from './settings';\n\nexport class Routines {\n\n  readonly horizontal: boolean;\n\n  constructor(settings: Settings) {\n    this.horizontal = settings.horizontal;\n  }\n\n  getScrollPosition(element: HTMLElement): number {\n    return element[this.horizontal ? 'scrollLeft' : 'scrollTop'];\n  }\n\n  setScrollPosition(element: HTMLElement, value: number) {\n    element[this.horizontal ? 'scrollLeft' : 'scrollTop'] = value;\n  }\n\n  getParams(element: HTMLElement): ClientRect {\n    if (element.tagName.toLowerCase() === 'body') {\n      element = <HTMLElement>element.parentElement;\n      return <ClientRect>{\n        'height': element.clientHeight,\n        'width': element.clientWidth,\n        'top': element.clientTop,\n        'bottom': element.clientTop + element.clientHeight,\n        'left': element.clientLeft,\n        'right': element.clientLeft + element.clientWidth\n      };\n    }\n    return element.getBoundingClientRect();\n  }\n\n  getSize(element: HTMLElement): number {\n    return this.getParams(element)[this.horizontal ? 'width' : 'height'];\n  }\n\n  getSizeStyle(element: HTMLElement): number {\n    const size = element.style[this.horizontal ? 'width' : 'height'];\n    return parseInt(<string>size, 10) || 0;\n  }\n\n  setSizeStyle(element: HTMLElement, value: number) {\n    element.style[this.horizontal ? 'width' : 'height'] = `${value}px`;\n  }\n\n  getRectEdge(params: ClientRect, direction: Direction, opposite?: boolean): number {\n    const forward = !opposite ? Direction.forward : Direction.backward;\n    return params[direction === forward ? (this.horizontal ? 'right' : 'bottom') : (this.horizontal ? 'left' : 'top')];\n  }\n\n  getEdge(element: HTMLElement, direction: Direction, opposite?: boolean): number {\n    const params = this.getParams(element);\n    return this.getRectEdge(params, direction, opposite);\n  }\n\n  getEdge2(element: HTMLElement, direction: Direction, relativeElement: HTMLElement, opposite: boolean): number {\n    // vertical only ?\n    return element.offsetTop - (relativeElement ? relativeElement.scrollTop : 0) +\n      (direction === (!opposite ? Direction.forward : Direction.backward) ? this.getSize(element) : 0);\n  }\n\n  hideElement(element: HTMLElement) {\n    element.style.display = 'none';\n  }\n\n  getOffset(element: HTMLElement): number {\n    return this.horizontal ? element.offsetLeft : element.offsetTop;\n  }\n\n}\n"]}