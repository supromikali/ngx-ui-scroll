{"version":3,"file":"ui-scroll.component.js","sourceRoot":"","sources":["../package/src/ui-scroll.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EACL,SAAS,EACI,UAAU,EACvB,uBAAuB,EAAE,iBAAiB,EAC3C,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAuBhD,MAAM,OAAO,iBAAiB;;;;;IAa5B,YACS,cAAiC,EACjC,UAAsB;QADtB,mBAAc,GAAd,cAAc,CAAmB;QACjC,eAAU,GAAV,UAAU,CAAY;IAE/B,CAAC;;;;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;;;;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;;;YA3CF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,QAAQ,EAAE;;;;;;;;;;;;;sDAa0C;aACrD;;;;YAzB0B,iBAAiB;YAD7B,UAAU;;;;IA8BvB,oCAAuB;;IACvB,qCAAkC;;IAClC,uCAA4C;;IAG5C,kCAA0B;;IAG1B,qCAA0B;;IAGxB,2CAAwC;;IACxC,uCAA6B","sourcesContent":["import {\n  Component, OnInit, OnDestroy,\n  TemplateRef, ElementRef,\n  ChangeDetectionStrategy, ChangeDetectorRef\n} from '@angular/core';\n\nimport { Workflow } from './component/workflow';\nimport { Datasource as IDatasource } from './component/interfaces/index';\nimport { Datasource } from './component/classes/datasource';\nimport { Item } from './component/classes/item';\n\n@Component({\n  selector: '[ui-scroll]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div data-padding-backward></div><div\n  *ngFor=\"let item of items\"\n  [attr.data-sid]=\"item.nodeId\"\n  [style.position]=\"item.invisible ? 'fixed' : null\"\n  [style.left]=\"item.invisible ? '-99999px' : null\"\n><ng-template\n  [ngTemplateOutlet]=\"template\"\n  [ngTemplateOutletContext]=\"{\n    $implicit: item.data,\n    index: item.$index,\n    odd: item.$index % 2,\n    even: !(item.$index % 2)\n }\"\n></ng-template></div><div data-padding-forward></div>`\n})\nexport class UiScrollComponent implements OnInit, OnDestroy {\n\n  // come from the directive\n  public version: string;\n  public template: TemplateRef<any>;\n  public datasource: IDatasource | Datasource;\n\n  // use in the template\n  public items: Array<Item>;\n\n  // Component-Workflow integration\n  public workflow: Workflow;\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public elementRef: ElementRef\n  ) {\n  }\n\n  ngOnInit() {\n    this.workflow = new Workflow(this);\n  }\n\n  ngOnDestroy() {\n    this.workflow.dispose();\n  }\n}\n"]}