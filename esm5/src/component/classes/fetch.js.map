{"version":3,"file":"fetch.js","sourceRoot":"","sources":["../../../../src/component/classes/fetch.ts"],"names":[],"mappings":";;;;AAGA;IAeE;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;;;;IAED,0BAAK;;;IAAL;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,sBAAI,oCAAY;;;;QAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;;;;;QAED,UAAiB,KAAyB;YACxC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;;;OALA;IAOD,sBAAI,mCAAW;;;;QAAf;YACE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,mCAAW;;;;QAAf;YACE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/D,CAAC;;;OAAA;IAED,sBAAI,6BAAK;;;;QAAT;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;;;OAAA;IAED,sBAAI,6BAAK;;;;QAAT;YACE,OAAO,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxG,CAAC;;;OAAA;IACH,iBAAC;AAAD,CAAC,AAzDD,IAyDC;;;;IAxDC,mCAAyC;;IACzC,2BAAmB;;IACnB,sCAAgC;;IAChC,qCAA+B;;IAC/B,gCAA0B;;IAC1B,+BAAyB;;IACzB,oCAAwB;;IACxB,+BAAkB;;IAClB,8BAAiB;;IACjB,kCAAqB;;IACrB,qCAAwB;;IACxB,+BAA4B;;IAC5B,+BAAmB","sourcesContent":["import { Item } from './item';\nimport { Direction } from '../interfaces/index';\n\nexport class FetchModel {\n  private _newItemsData: Array<any> | null;\n  items: Array<Item>;\n  firstIndexBuffer: number | null;\n  lastIndexBuffer: number | null;\n  firstIndex: number | null;\n  lastIndex: number | null;\n  hasAnotherPack: boolean;\n  callCount: number;\n  minIndex: number;\n  negativeSize: number;\n  averageItemSize: number;\n  direction: Direction | null;\n  isPrepend: boolean;\n\n  constructor() {\n    this.callCount = 0;\n    this.reset();\n  }\n\n  reset() {\n    this._newItemsData = null;\n    this.items = [];\n    this.firstIndexBuffer = null;\n    this.lastIndexBuffer = null;\n    this.firstIndex = null;\n    this.lastIndex = null;\n    this.hasAnotherPack = false;\n    this.negativeSize = 0;\n    this.direction = null;\n    this.isPrepend = false;\n  }\n\n  get newItemsData(): Array<Item> | null {\n    return this._newItemsData;\n  }\n\n  set newItemsData(items: Array<Item> | null) {\n    this._newItemsData = items;\n    this.callCount++;\n  }\n\n  get shouldFetch(): boolean {\n    return !!this.count;\n  }\n\n  get hasNewItems(): boolean {\n    return !!((this._newItemsData && this._newItemsData.length));\n  }\n\n  get index(): number | null {\n    return this.firstIndex;\n  }\n\n  get count(): number {\n    return this.firstIndex !== null && this.lastIndex !== null ? this.lastIndex - this.firstIndex + 1 : 0;\n  }\n}\n"]}