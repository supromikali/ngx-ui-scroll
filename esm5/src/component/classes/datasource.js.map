{"version":3,"file":"datasource.js","sourceRoot":"","sources":["../../../../src/component/classes/datasource.ts"],"names":[],"mappings":";;;;AAGA,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM,WAAW,CAAC;AAEzD;IAOE,oBAAY,UAAuB,EAAE,YAAsB;QACzD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,MAAM,CAAC,MAAM,CAAC,mBAAK,IAAI,EAAA,EAAE,UAAU,CAAC,CAAC;QACrC,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,mBAAU,mBAAmB,EAAE,EAAA,CAAC;SAChD;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;SAC9B;IACH,CAAC;IACH,iBAAC;AAAD,CAAC,AAhBD,IAgBC;;;;IAfC,iCAA8B;;IAC9B,yBAAmB;;IACnB,8BAAoB;;IACpB,iCAA0B;;IAC1B,6BAAkB","sourcesContent":["import {\r\n  Datasource as IDatasource, DatasourceGet, DevSettings, Settings, Adapter as IAdapter\r\n} from '../interfaces/index';\r\nimport { Adapter, generateMockAdapter } from './adapter';\r\n\r\nexport class Datasource implements IDatasource {\r\n  readonly constructed: boolean;\r\n  get: DatasourceGet;\r\n  settings?: Settings;\r\n  devSettings?: DevSettings;\r\n  adapter: IAdapter;\r\n\r\n  constructor(datasource: IDatasource, hasNoAdapter?: boolean) {\r\n    this.constructed = true;\r\n    Object.assign(<any>this, datasource);\r\n    if (hasNoAdapter) {\r\n      this.adapter = <IAdapter>generateMockAdapter();\r\n    } else {\r\n      this.adapter = new Adapter();\r\n    }\r\n  }\r\n}\r\n"]}